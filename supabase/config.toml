# Supabase Config
# Docs: https://supabase.com/docs/guides/local-development

[experimental]
# Required for db branch and db diff --schema migrations.
# Default: true
# Show function argument names in postgres triggers generated by supabase functions deploy.
# Default: false
# Allow starting multiple local development instances by assigning random ports.
# Default: false

# Format: array of strings (required)
# Specify paths to migration files.
# Note: Storing migrations in a separate folder is recommended, eg. supabase/migrations.
# The supabase init command creates this folder by default.
migrations = ["supabase/migrations"]

# Format: postgres string or array of strings (optional)
# Specify paths to seed sql files.
# Note: Seed files are executed after executing migration files.
# Default: ["supabase/seed.sql"]
# seed = ["supabase/seed.sql"]

# Format: string (optional)
# Specify path to store generated types.
# Note: This is only used when running supabase gen types.
# Default: "supabase/functions/.supabase/types.ts"
# types = "path/to/types"

# Format: array of strings (optional)
# Specify paths to SQL files for validating schema, such as checking for breaking changes.
# Note: SQL files must conform to pgTAP spec. See https://pgtap.org/documentation.html.
# Default: []
# test = []

# Specify location for generated schemas.
# Default: supabase/.branches
# schema = "path/to/schema"

# Specify location for generated database dumps.
# Default: supabase/.dumps
# dump = "path/to/dump"

# Format: string (required)
# Project ID generated by supabase init command.
# Should be kept in version control.
project_id = "eduportal-e51458"

[api]
# Format: integer (optional)
# Port to use for the API URL.
# Default: 54321
# port = 54321

# Format: array of strings (optional)
# Schemas to expose in your API. Tables, views and stored procedures in this schema will get API routes.
# Default: ["public", "storage", "graphql"]
# schemas = ["public", "storage", "graphql"]

# Format: integer (optional)
# Maximum size of JSON body request. Limits the size of input to table inserts and updates.
# Default: 6MB
# max_rows = 1000

# Format: string (optional)
# The base path for your API routes. Set this to "/" to use the root path.
# Default: "/rest/v1"
# base_path = "/rest/v1"

# Format: string (optional)
# The database role to use when executing statements via the API.
# Default: "anon"
# db_pool = "authenticator"

[db]
# Format: integer (optional)
# Port to use for the local database URL.
# Default: 54322
# port = 54322

# Format: boolean (optional)
# Use a major version of PostgreSQL that's different from the default.
# Default: false
# major_version = 14

# Format: string (optional)
# Specifies the instance id to use for the local database. Computed from project ref by default.
# Default: <project_ref>
# instance_id = "supabase_project_alksd92kd"

# Format: string (optional)
# Specifies a path to the directory containing `init.sql` for initializing the local database.
# Default: "supabase/tests/database"
# test_dir = "supabase/tests/database"

# Format: array of strings (optional)
# Schemas to include in the generated types.
# Default: ["public"]
# schemas = ["public"]

# Format: array of strings (optional)
# Schemas to exclude in the generated types. Ignored if `schemas` is specified.
# Default: ["auth", "_supavisor", "extensions", "graphql", "graphql_public", "net", "pgsodium", "pgsodium_masks", "pgtle", "pgvector", "realtime", "storage", "supabase_functions", "supabase_migrations", "vault"]
# excluded_schemas = []

# Format: boolean (optional)
# Use schemas in the generated types.
# Default: false
# use_schema_distinction = false

# Format: string (optional)
# Specifies the root of the directory containing custom database roles
# Default: supabase/roles.sql
# roles_path = "supabase/roles.sql"

# Format: string (optional)
# Specifies the name of the docker image for shadow database. Only applies when db diff command is run without --use-migra.
# Default: supabase/postgres:15.1.0.149
# shadow_docker_image = "supabase/postgres:15.1.0.149"

[studio]
# Format: integer (optional)
# Port to use for Supabase Studio.
# Default: 54323
# port = 54323

# Format: array of strings (optional)
# Schemas which are excluded from the user interface. Helpful for schemas with a large number of tables, like `extensions`.
# Default: ["auth", "_supavisor", "extensions", "graphql", "graphql_public", "net", "pgsodium", "pgsodium_masks", "pgtle", "pgvector", "realtime", "storage", "supabase_functions", "supabase_migrations", "vault"]
# excluded_schemas = ["auth", "_supavisor", "extensions", "graphql", "graphql_public", "net", "pgsodium", "pgsodium_masks", "pgtle", "pgvector", "realtime", "storage", "supabase_functions", "supabase_migrations", "vault"]

# Format: array of strings (optional)
# Tables or views which are excluded from the user interface. Append `.` followed by the table or view name.
# Default: ["extensions.pg_stat_statements", "extensions.pg_stat_statements_info", "pgsodium.key"]
# excluded_tables = ["extensions.pg_stat_statements", "extensions.pg_stat_statements_info", "pgsodium.key"]

[auth]
# Format: boolean (optional)
# Enable the built-in auth server.
# Default: true
# enable_auth = true

# Format: integer (optional)
# Port to use for the local auth server URL.
# Default: 9999
# port = 9999

# Format: string (optional)
# The site URL uses for default email templates.
# Default: "http://localhost:3000"
# site_url = "http://localhost:3000"

# Format: array of strings (optional)
# The redirect URLs allowed by the auth server. Corresponds to `GOTRUE_URI_ALLOW_LIST` config.
# Default: []
# redirect_urls = []

# Format: array of strings (optional)
# How long tokens are valid for, in seconds. Corresponds to `GOTRUE_JWT_EXP` config.
# Default: 3600
# jwt_expiry = 3600

# Format: boolean (optional)
# Enable signing up new users. Corresponds to `GOTRUE_DISABLE_SIGNUP` config.
# Default: true
# enable_signup = true

[auth.email]
# Format: boolean (optional)
# Enable email confirmations required for users to log in. Corresponds to `GOTRUE_MAILER_AUTOCONFIRM` config.
# Default: false
# enable_confirmations = false

# Format: boolean (optional)
# Enable linking users by email aliases. Allows users to change their email address without creating a new account. Corresponds to `GOTRUE_MAILER_ALLOW_EMAIL_CHANGE` config.
# Default: true
# enable_email_change = true

# Format: integer (optional)
# The validity duration of the email change token, in seconds. Corresponds to `GOTRUE_MAILER_EMAIL_CHANGE_EXP` config.
# Default: 86400
# email_change_expiry = 86400

# Format: boolean (optional)
# Enable sending emails via a local SMTP server.
# Default: true
# enable_smtp = true

# Format: integer (optional)
# Port to use for the local email testing server URL. Corresponds to `INBUCKET_SMTP_PORT` config.
# Default: 54324
# local_port = 54324

# Format: integer (optional)
# Port to use for the local email testing server web UI. Corresponds to `INBUCKET_WEB_PORT` config.
# Default: 54325
# local_ui_port = 54325

# Format: string (optional)
# Sender name used in emails. Corresponds to `GOTRUE_MAILER_SENDER_NAME` config.
# Default: "Supabase"
# sender_name = "Supabase"

# Format: string (optional)
# Subject for the confirmation email.
# Default: "Confirm Your Signup"
# confirmation_subject = "Confirm Your Signup"

# Format: string (optional)
# Subject for the password recovery email.
# Default: "Reset Your Password"
# password_recovery_subject = "Reset Your Password"

# Format: string (optional)
# Subject for the email change email.
# Default: "Confirm Email Change"
# email_change_subject = "Confirm Email Change"

# Format: string (optional)
# Subject for the reauthentication email.
# Default: "Confirm Reauthentication"
# reauthentication_subject = "Confirm Reauthentication"

# Format: string (optional)
# Subject for the invite email.
# Default: "You have been invited"
# invite_subject = "You have been invited"

[auth.sms]
# Format: boolean (optional)
# Enable signing up new users via phone. Corresponds to `GOTRUE_DISABLE_PHONE_SIGNUP` config.
# Default: true
# enable_phone_signup = true

# Format: boolean (optional)
# Enable phone confirmations required for users to log in. Corresponds to `GOTRUE_SMS_AUTOCONFIRM` config.
# Default: false
# enable_confirmations = false

# Format: string (optional)
# Specifies the Twilio account SID. Corresponds to `GOTRUE_SMS_TWILIO_ACCOUNT_SID` config.
# Default: ""
# twilio_account_sid = ""

# Format: string (optional)
# Specifies the Twilio auth token. Corresponds to `GOTRUE_SMS_TWILIO_AUTH_TOKEN` config.
# Default: ""
# twilio_auth_token = ""

# Format: string (optional)
# Specifies the Twilio message service SID. Corresponds to `GOTRUE_SMS_TWILIO_MESSAGE_SERVICE_SID` config.
# Default: ""
# twilio_message_service_sid = ""

# Format: string (optional)
# Specifies the Vonage API key. Corresponds to `GOTRUE_SMS_VONAGE_API_KEY` config.
# Default: ""
# vonage_api_key = ""

# Format: string (optional)
# Specifies the Vonage API secret. Corresponds to `GOTRUE_SMS_VONAGE_API_SECRET` config.
# Default: ""
# vonage_api_secret = ""

# Format: string (optional)
# Specifies the Vonage `from` number. Corresponds to `GOTRUE_SMS_VONAGE_FROM` config.
# Default: ""
# vonage_from = ""

# Format: string (optional)
# Specifies the MessageBird access key. Corresponds to `GOTRUE_SMS_MESSAGEBIRD_ACCESS_KEY` config.
# Default: ""
# messagebird_access_key = ""

# Format: string (optional)
# Specifies the MessageBird originator number. Corresponds to `GOTRUE_SMS_MESSAGEBIRD_ORIGINATOR` config.
# Default: ""
# messagebird_originator = ""

# Format: string (optional)
# Specifies the Textlocal API key. Corresponds to `GOTRUE_SMS_TEXTLOCAL_API_KEY` config.
# Default: ""
# textlocal_api_key = ""

# Format: string (optional)
# Specifies the Textlocal sender name. Corresponds to `GOTRUE_SMS_TEXTLOCAL_SENDER` config.
# Default: ""
# textlocal_sender = ""

[auth.external.google]
# Format: boolean (optional)
# Default: false
# enabled = false

# Format: string (optional)
# Default: ""
# client_id = ""

# Format: string (optional)
# Default: ""
# secret = ""

# Format: string (optional)
# Default: ""
# redirect_uri = ""

[auth.external.apple]
# Format: boolean (optional)
# Default: false
# enabled = false

# Format: string (optional)
# Default: ""
# client_id = ""

# Format: string (optional)
# Default: ""
# secret = ""

# Format: string (optional)
# Default: ""
# redirect_uri = ""

[auth.external.azure]
# Format: boolean (optional)
# Default: false
# enabled = false

# Format: string (optional)
# Default: ""
# client_id = ""

# Format: string (optional)
# Default: ""
# secret = ""

# Format: string (optional)
# Default: ""
# redirect_uri = ""

# Format: array of string (optional)
# Default: ""
# url = ""

[auth.external.bitbucket]
# Format: boolean (optional)
# Default: false
# enabled = false

# Format: string (optional)
# Default: ""
# client_id = ""

# Format: string (optional)
# Default: ""
# secret = ""

# Format: string (optional)
# Default: ""
# redirect_uri = ""

# Format: string (optional)
# Default: ""
# skip_request_validation = false

[auth.external.discord]
# Format: boolean (optional)
# Default: false
# enabled = false

# Format: string (optional)
# Default: ""
# client_id = ""

# Format: string (optional)
# Default: ""
# secret = ""

# Format: string (optional)
# Default: ""
# redirect_uri = ""

[auth.external.facebook]
# Format: boolean (optional)
# Default: false
# enabled = false

# Format: string (optional)
# Default: ""
# client_id = ""

# Format: string (optional)
# Default: ""
# secret = ""

# Format: string (optional)
# Default: ""
# redirect_uri = ""

[auth.external.figma]
# Format: boolean (optional)
# Default: false
# enabled = false

# Format: string (optional)
# Default: ""
# client_id = ""

# Format: string (optional)
# Default: ""
# secret = ""

# Format: string (optional)
# Default: ""
# redirect_uri = ""

[auth.external.github]
# Format: boolean (optional)
# Default: false
# enabled = false

# Format: string (optional)
# Default: ""
# client_id = ""

# Format: string (optional)
# Default: ""
# secret = ""

# Format: string (optional)
# Default: ""
# redirect_uri = ""

[auth.external.gitlab]
# Format: boolean (optional)
# Default: false
# enabled = false

# Format: string (optional)
# Default: ""
# client_id = ""

# Format: string (optional)
# Default: ""
# secret = ""

# Format: string (optional)
# Default: ""
# redirect_uri = ""

# Format: string (optional)
# Default: ""
# url = ""

[auth.external.kakao]
# Format: boolean (optional)
# Default: false
# enabled = false

# Format: string (optional)
# Default: ""
# client_id = ""

# Format: string (optional)
# Default: ""
# secret = ""

# Format: string (optional)
# Default: ""
# redirect_uri = ""

[auth.external.keycloak]
# Format: boolean (optional)
# Default: false
# enabled = false

# Format: string (optional)
# Default: ""
# client_id = ""

# Format: string (optional)
# Default: ""
# secret = ""

# Format: string (optional)
# Default: ""
# redirect_uri = ""

# Format: string (optional)
# Default: ""
# url = ""

[auth.external.linkedin_oidc]
# Format: boolean (optional)
# Default: false
# enabled = false

# Format: string (optional)
# Default: ""
# client_id = ""

# Format: string (optional)
# Default: ""
# secret = ""

# Format: string (optional)
# Default: ""
# redirect_uri = ""

[auth.external.notion]
# Format: boolean (optional)
# Default: false
# enabled = false

# Format: string (optional)
# Default: ""
# client_id = ""

# Format: string (optional)
# Default: ""
# secret = ""

# Format: string (optional)
# Default: ""
# redirect_uri = ""

[auth.external.slack]
# Format: boolean (optional)
# Default: false
# enabled = false

# Format: string (optional)
# Default: ""
# client_id = ""

# Format: string (optional)
# Default: ""
# secret = ""

# Format: string (optional)
# Default: ""
# redirect_uri = ""

[auth.external.spotify]
# Format: boolean (optional)
# Default: false
# enabled = false

# Format: string (optional)
# Default: ""
# client_id = ""

# Format: string (optional)
# Default: ""
# secret = ""

# Format: string (optional)
# Default: ""
# redirect_uri = ""

[auth.external.twitch]
# Format: boolean (optional)
# Default: false
# enabled = false

# Format: string (optional)
# Default: ""
# client_id = ""

# Format: string (optional)
# Default: ""
# secret = ""

# Format: string (optional)
# Default: ""
# redirect_uri = ""

[auth.external.twitter]
# Format: boolean (optional)
# Default: false
# enabled = false

# Format: string (optional)
# Default: ""
# client_id = ""

# Format: string (optional)
# Default: ""
# secret = ""

# Format: string (optional)
# Default: ""
# redirect_uri = ""

[auth.external.workos]
# Format: boolean (optional)
# Default: false
# enabled = false

# Format: string (optional)
# Default: ""
# client_id = ""

# Format: string (optional)
# Default: ""
# secret = ""

# Format: string (optional)
# Default: ""
# redirect_uri = ""

# Format: string (optional)
# Default: ""
# url = ""

[auth.sso]
# Format: boolean (optional)
# Default: false
# enabled = false

# Format: boolean (optional)
# Default: false
# skip_request_validation = false

[functions]
# Format: object.<string, object> (optional)
# Configure behavior of functions. The key is the function slug.
# function_config = { login = { verify_jwt = false }, private = { } }

[analytics]
# Format: boolean (optional)
# Sends anonymous usage stats to help improve Supabase.
# Default: true
# enabled = true

[realtime]
# Format: boolean (optional)
# Enables the realtime server. Allows clients to listen to database changes over websockets.
# Default: true
# enabled = true

# Format: array of string (optional)
# The database roles that can subscribe to realtime broadcasts.
# Default: ["authenticated", "anon"]
# authorized_roles = ["authenticated", "anon"]

[storage]
# Format: boolean (optional)
# Enable the storage server. Allows users to upload and download files.
# Default: true
# enabled = true

# Format: string (optional)
# Default: ""
# file_size_limit = "50MiB"

[functions."*"]
# Format: string (optional)
# Path to the function directory. If omitted, defaults to `supabase/functions/<func_name>`.
# dir = "path/to/function"

# Format: string (optional)
# Command to verify the function against its import map.
# Note: The command must output to stderr for failure, and exit with status code 0 for success.
# Default: "deno run --quiet --no-check --import-map functions/<func_name>/import_map.json functions/<func_name>/index.ts"
# verify = "deno lint"

# Format: string (optional)
# Path to the import map file. If omitted, defaults to `supabase/functions/<func_name>/import_map.json`.
# import_map = "path/to/import_map.json"

# Format: string (optional)
# Path to the entrypoint file. If omitted, defaults to `supabase/functions/<func_name>/index.ts`.
# entrypoint = "path/to/entrypoint.ts"

# Format: boolean (optional)
# Verify JWT before invoking the function.
# Default: true
# verify_jwt = true

[inbucket]
# Format: integer (optional)
# Default: 54324
# smtp_port = 54324

# Format: integer (optional)
# Default: 54325
# pop3_port = 54326

# Format: integer (optional)
# Default: 54326
# web_ui_port = 54327

[functions.halo-dunia]
enabled = true
verify_jwt = true
import_map = "./functions/halo-dunia/deno.json"
# Uncomment to specify a custom file path to the entrypoint.
# Supported file extensions are: .ts, .js, .mjs, .jsx, .tsx
entrypoint = "./functions/halo-dunia/index.ts"
# Specifies static files to be bundled with the function. Supports glob patterns.
# For example, if you want to serve static HTML pages in your function:
# static_files = [ "./functions/halo-dunia/*.html" ]
